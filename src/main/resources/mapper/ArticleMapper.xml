<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaobu.blog.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.xiaobu.blog.model.Article">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="title" jdbcType="CHAR" property="title"/>
        <result column="abstract_info" jdbcType="CHAR" property="abstractInfo"/>
        <result column="reading" jdbcType="BIGINT" property="reading"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiaobu.blog.model.Article">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        id, status, title, abstract_info, reading, create_time, update_time
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.xiaobu.blog.model.ArticleExample"
            resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from sm_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.xiaobu.blog.model.ArticleExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sm_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from sm_article
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        delete from sm_article
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.xiaobu.blog.model.ArticleExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        delete from sm_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>


    <insert id="insert" parameterType="com.xiaobu.blog.model.Article">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        insert into sm_article (id, status, title,
        abstract_info, reading, create_time,
        update_time, content)
        values (#{id,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{title,jdbcType=CHAR},
        #{abstractInfo,jdbcType=CHAR}, #{reading,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.xiaobu.blog.model.Article">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        insert into sm_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="abstractInfo != null">
                abstract_info,
            </if>
            <if test="reading != null">
                reading,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=CHAR},
            </if>
            <if test="abstractInfo != null">
                #{abstractInfo,jdbcType=CHAR},
            </if>
            <if test="reading != null">
                #{reading,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xiaobu.blog.model.ArticleExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        select count(*) from sm_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        update sm_article
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=CHAR},
            </if>
            <if test="record.abstractInfo != null">
                abstract_info = #{record.abstractInfo,jdbcType=CHAR},
            </if>
            <if test="record.reading != null">
                reading = #{record.reading,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        update sm_article
        set id = #{record.id,jdbcType=BIGINT},
        status = #{record.status,jdbcType=INTEGER},
        title = #{record.title,jdbcType=CHAR},
        abstract_info = #{record.abstractInfo,jdbcType=CHAR},
        reading = #{record.reading,jdbcType=BIGINT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        update sm_article
        set id = #{record.id,jdbcType=BIGINT},
        status = #{record.status,jdbcType=INTEGER},
        title = #{record.title,jdbcType=CHAR},
        abstract_info = #{record.abstractInfo,jdbcType=CHAR},
        reading = #{record.reading,jdbcType=BIGINT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaobu.blog.model.Article">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        update sm_article
        <set>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=CHAR},
            </if>
            <if test="abstractInfo != null">
                abstract_info = #{abstractInfo,jdbcType=CHAR},
            </if>
            <if test="reading != null">
                reading = #{reading,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaobu.blog.model.Article">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        update sm_article
        set status = #{status,jdbcType=INTEGER},
        title = #{title,jdbcType=CHAR},
        abstract_info = #{abstractInfo,jdbcType=CHAR},
        reading = #{reading,jdbcType=BIGINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaobu.blog.model.Article">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 18 13:37:33 CST 2020.
        -->
        update sm_article
        set status = #{status,jdbcType=INTEGER},
        title = #{title,jdbcType=CHAR},
        abstract_info = #{abstractInfo,jdbcType=CHAR},
        reading = #{reading,jdbcType=BIGINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>


    <!-- ============ 自定义查询 ============= -->

    <insert id="_insertArticleSelective" keyProperty="id" parameterType="com.xiaobu.blog.model.Article"
            useGeneratedKeys="true">
        insert into sm_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="abstractInfo != null">
                abstract_info,
            </if>
            <if test="reading != null">
                reading,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=CHAR},
            </if>
            <if test="abstractInfo != null">
                #{abstractInfo,jdbcType=CHAR},
            </if>
            <if test="reading != null">
                #{reading,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <insert id="_insertArticleTag" parameterType="com.xiaobu.blog.model.wrapper.ArticleWithTag">

        <bind name="_articleId" value="_parameter.getArticle().getId()"/>

        insert into sm_article__tag
        (article_id,tag_id)
        values
        <trim>
            <foreach collection="tags" item="tag" separator=",">
                (#{_articleId},#{tag.id})
            </foreach>
        </trim>
    </insert>

    <delete id="_deleteAllTags" parameterType="com.xiaobu.blog.model.Article">
        delete
        from sm_article__tag
        where article_id = ${id}
    </delete>

    <delete id="_deleteTagsByArticles" parameterType="list">
        <if test="list != null and list.size > 0">
            delete from sm_article__tag
            where article_id in
            (
                <foreach collection="list" separator="," item="article">
                    #{article.id}
                </foreach>
            )
        </if>
    </delete>

    <select id="_selectHotArticles" resultType="com.xiaobu.blog.model.Article" parameterType="int">
        select
        <include refid="Base_Column_List"/>
        from sm_article
        where status = 1001
        order by reading
        desc limit 0,#{count};
    </select>
    <select id="_selectArticles" resultType="com.xiaobu.blog.model.Article"
            parameterType="com.xiaobu.blog.common.page.Pageable">
        select
        <include refid="Base_Column_List"/>
        from sm_article
        where status != 1003
        <if test="sorts != null and sorts.size > 0">
            order by
            <trim>
                <foreach collection="sorts" item="sort" separator=",">
                    ${sort.name} ${sort.rule}
                </foreach>
            </trim>
        </if>
        limit ${start},${end}
    </select>
    <select id="_selectByKeywords" resultType="com.xiaobu.blog.model.Article">
        select
        <include refid="Base_Column_List"/>
        from sm_article
        where status != 1003
        and MATCH (title,content,abstract_info)
        AGAINST (#{keywords} IN BOOLEAN MODE)
        <if test="pageable.sorts != null and pageable.sorts.size > 0">
            order by
            <trim>
                <foreach collection="pageable.sorts" item="sort" separator=",">
                    ${sort.name} ${sort.rule}
                </foreach>
            </trim>
        </if>
        limit ${pageable.start},${pageable.end}
    </select>
    <select id="_countArticlesByKeywords" resultType="java.lang.Long">
        select count(*)
        from sm_article
        where status != 1003
          and MATCH(title, content, abstract_info)
                    AGAINST(#{keywords} IN BOOLEAN MODE);
    </select>
    <select id="_selectArticleWithTag" resultMap="article_width_tag">
        <if test="id > 0">
            select
            a.id as aid,a.title as atitle,a.abstract_info as aabstractInfo,
            a.content as acontent,a.status as astatus,a.reading as areading,
            a.create_time as acreateTime,
            a.update_time as aupdateTIme,
            t.id as tid,t.name as tname
            from sm_article a join sm_article__tag at join sm_tag t
            on a.id = at.article_id and t.id = at.tag_id
            where a.id = #{id}
        </if>
    </select>
    <select id="_selectPublishedArticlesByPage" resultType="com.xiaobu.blog.model.Article">
        select
        <include refid="Base_Column_List"/>
        from sm_article
        where status = 1001
        <if test="sorts != null and sorts.size > 0">
            order by
            <trim>
                <foreach collection="sorts" item="sort" separator=",">
                    ${sort.name} ${sort.rule}
                </foreach>
            </trim>
        </if>
        limit ${start},${end}
    </select>
    <select id="_countPublisedArticlesByKeywords" resultType="java.lang.Long">
        select count(*)
        from sm_article
        where status = 1001
          and MATCH(title, content, abstract_info)
                    AGAINST(#{keywords} IN BOOLEAN MODE);
    </select>
    <select id="_selectPublishedArticlesByKeywords" resultType="com.xiaobu.blog.model.Article">
        select
        <include refid="Base_Column_List"/>
        from sm_article
        where status = 1001
        and MATCH (title,content,abstract_info)
        AGAINST (#{keywords} IN BOOLEAN MODE)
        <if test="pageable.sorts != null and pageable.sorts.size > 0">
            order by
            <trim>
                <foreach collection="pageable.sorts" item="sort" separator=",">
                    ${sort.name} ${sort.rule}
                </foreach>
            </trim>
        </if>
        limit ${pageable.start},${pageable.end}
    </select>
    <select id="_selectMonth" resultType="java.lang.String" parameterType="com.xiaobu.blog.common.page.Pageable">
        select date_format(create_time, '%Y年%m月')
        from sm_article
        where status = 1001
        group by date_format(create_time, '%Y年%m月')
        limit ${start}, ${end}
    </select>
    <select id="_selectArticlesByMonth" resultType="com.xiaobu.blog.model.Article">
        select
        <include refid="Base_Column_List"/>
        from sm_article
        where status=1001 and date_format(create_time,'%Y年%m月')=#{month};
    </select>
    <select id="_selectArchiveCounts" resultType="java.lang.Long">
        select count(*)
        from (
                 select date_format(create_time, '%y%m')
                 from sm_article
                 where status = 1001
                 group by date_format(create_time, '%y%m')
             ) as count
    </select>
    <select id="_selectPublishedArticlesByTag" resultType="com.xiaobu.blog.model.Article">
        select
        <include refid="Base_Column_List"/>
        from sm_article
        where
        id in
        (select article_id from sm_article__tag where tag_id = #{tagid})
        and status = 1001
        <if test="pageable.sorts != null and pageable.sorts.size > 0">
            order by
            <trim>
                <foreach collection="pageable.sorts" item="sort" separator=",">
                    ${sort.name} ${sort.rule}
                </foreach>
            </trim>
        </if>
        limit ${pageable.start},${pageable.end}
    </select>
    <select id="_selectDeletedArticles" resultType="com.xiaobu.blog.model.Article">
        select
        <include refid="Base_Column_List"/>
        from sm_article
        where status = 1003
        <if test="sorts != null and sorts.size > 0">
            order by
            <trim>
                <foreach collection="sorts" item="sort" separator=",">
                    ${sort.name} ${sort.rule}
                </foreach>
            </trim>
        </if>
        limit ${start},${end}
    </select>
    <resultMap id="article_width_tag" type="com.xiaobu.blog.model.wrapper.ArticleWithTag">
        <id property="article.id" column="aid"/>
        <result property="article.title" column="atitle"/>
        <result property="article.abstractInfo" column="aabstractInfo"/>
        <result property="article.content" column="acontent"/>
        <result property="article.status" column="astatus"/>
        <result property="article.reading" column="areading"/>
        <result property="article.createTime" column="acreateTime"/>
        <result property="article.updateTime" column="aupdateTime"/>
        <collection property="tags" ofType="com.xiaobu.blog.model.Tag">
            <id property="id" column="tid"/>
            <id property="name" column="tname"/>
        </collection>
    </resultMap>
    <update id="_updateArticleStatusByIds">
        <if test="id_list.size > 0 and status != null">
            update sm_article
            set status = #{status}
            where id in
            (
            <trim>
                <foreach item="id" separator="," collection="id_list">
                    #{id}
                </foreach>
            </trim>
            )
        </if>
    </update>
    <update id="_addReading">
        update sm_article
        set reading = reading + 1
        where id = #{id}
    </update>

    <!-- ============= 自定义查询 ============ -->

</mapper>
